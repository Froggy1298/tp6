<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDeniedChangeUserMsg" xml:space="preserve">
    <value>Access prohibited, please log in with another user.</value>
  </data>
  <data name="AccessDeniedMsg" xml:space="preserve">
    <value>Access prohibited, please log in.</value>
  </data>
  <data name="AddMembre" xml:space="preserve">
    <value>Add a member</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>ADMINISTRATION</value>
  </data>
  <data name="Ajouter" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="BackToHomepage" xml:space="preserve">
    <value>Back to the homepage</value>
  </data>
  <data name="BackToLoginPage" xml:space="preserve">
    <value>Back to login page</value>
  </data>
  <data name="ChoiMenu" xml:space="preserve">
    <value>MENU CHOICES</value>
  </data>
  <data name="ChoixMenu" xml:space="preserve">
    <value>Menu choice</value>
  </data>
  <data name="ConfirmReserv" xml:space="preserve">
    <value>Confirm booking</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create a new account</value>
  </data>
  <data name="DateReserv" xml:space="preserve">
    <value>Reservation date</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Equipe" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="Identification" xml:space="preserve">
    <value>Identification</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="InvalidEmailFormat" xml:space="preserve">
    <value>Invalid email format.</value>
  </data>
  <data name="InvalidUsernamePassword" xml:space="preserve">
    <value>Incorrect username and/or password(s).</value>
  </data>
  <data name="LesMembres" xml:space="preserve">
    <value>THE MEMBERS</value>
  </data>
  <data name="LesReserv" xml:space="preserve">
    <value>RESERVATIONS</value>
  </data>
  <data name="ListChoixMembre" xml:space="preserve">
    <value>List of member</value>
  </data>
  <data name="ListChoixMenu" xml:space="preserve">
    <value>List of menu choice</value>
  </data>
  <data name="ListReserv" xml:space="preserve">
    <value>List of reservations</value>
  </data>
  <data name="ModelBetween" xml:space="preserve">
    <value>The value must be between {1} and {2}.</value>
  </data>
  <data name="ModelLengthBetween" xml:space="preserve">
    <value>The length must be between {2} and {1}.</value>
  </data>
  <data name="ModelLengthLessThan" xml:space="preserve">
    <value>The length must be less than {1}.</value>
  </data>
  <data name="ModelNumber" xml:space="preserve">
    <value>The value must be a number.</value>
  </data>
  <data name="ModelRequired" xml:space="preserve">
    <value>{0} required.</value>
  </data>
  <data name="Modifier" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameAlreadyExists" xml:space="preserve">
    <value>Name already exists.</value>
  </data>
  <data name="NbClient" xml:space="preserve">
    <value>Number of client</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PrendreReserv" xml:space="preserve">
    <value>Take Reservation</value>
  </data>
  <data name="QuestionSuppMember" xml:space="preserve">
    <value>Are you sure you want to delete this member?</value>
  </data>
  <data name="QuestionSuppMenu" xml:space="preserve">
    <value>Are you sure you want to delete this menu?</value>
  </data>
  <data name="ReservComp" xml:space="preserve">
    <value>Reservation successfully completed</value>
  </data>
  <data name="ReservLigne" xml:space="preserve">
    <value>ONLINE BOOKING</value>
  </data>
  <data name="RetournMembre" xml:space="preserve">
    <value>Back to member list</value>
  </data>
  <data name="RetournMenu" xml:space="preserve">
    <value>Back to list of menu choices</value>
  </data>
  <data name="ReturnPage" xml:space="preserve">
    <value>Return to homepage</value>
  </data>
  <data name="ReturnReserv" xml:space="preserve">
    <value>Back to booking list</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="Supp" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="SuppMembre" xml:space="preserve">
    <value>Delete a member</value>
  </data>
  <data name="SuppMenu" xml:space="preserve">
    <value>Delete a menu choice</value>
  </data>
  <data name="SuppReserv" xml:space="preserve">
    <value>Delete a reservation</value>
  </data>
  <data name="ThankYou" xml:space="preserve">
    <value>Thank you for using our online booking module.</value>
  </data>
  <data name="UnChoixMenu" xml:space="preserve">
    <value>a menu choice</value>
  </data>
  <data name="UnMembre" xml:space="preserve">
    <value>a member</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="VoirBiento" xml:space="preserve">
    <value>Hope to see you soon</value>
  </data>
  <data name="VotreReserv" xml:space="preserve">
    <value>Your reservation</value>
  </data>
</root>